/*
 * Copyright (c) 2002 Lightweight Java Game Library Project
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * * Neither the name of 'Lightweight Java Game Library' nor the names of
 *   its contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_lwjgl_openal_ALC */

#ifndef _Included_org_lwjgl_openal_ALC
#define _Included_org_lwjgl_openal_ALC
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: created */
#undef org_lwjgl_openal_ALC_INVALID
#define org_lwjgl_openal_ALC_INVALID -1L
#undef org_lwjgl_openal_ALC_FALSE
#define org_lwjgl_openal_ALC_FALSE 0L
#undef org_lwjgl_openal_ALC_TRUE
#define org_lwjgl_openal_ALC_TRUE 1L
#undef org_lwjgl_openal_ALC_NO_ERROR
#define org_lwjgl_openal_ALC_NO_ERROR 0L
#undef org_lwjgl_openal_ALC_MAJOR_VERSION
#define org_lwjgl_openal_ALC_MAJOR_VERSION 4096L
#undef org_lwjgl_openal_ALC_MINOR_VERSION
#define org_lwjgl_openal_ALC_MINOR_VERSION 4097L
#undef org_lwjgl_openal_ALC_ATTRIBUTES_SIZE
#define org_lwjgl_openal_ALC_ATTRIBUTES_SIZE 4098L
#undef org_lwjgl_openal_ALC_ALL_ATTRIBUTES
#define org_lwjgl_openal_ALC_ALL_ATTRIBUTES 4099L
#undef org_lwjgl_openal_ALC_DEFAULT_DEVICE_SPECIFIER
#define org_lwjgl_openal_ALC_DEFAULT_DEVICE_SPECIFIER 4100L
#undef org_lwjgl_openal_ALC_DEVICE_SPECIFIER
#define org_lwjgl_openal_ALC_DEVICE_SPECIFIER 4101L
#undef org_lwjgl_openal_ALC_EXTENSIONS
#define org_lwjgl_openal_ALC_EXTENSIONS 4102L
#undef org_lwjgl_openal_ALC_FREQUENCY
#define org_lwjgl_openal_ALC_FREQUENCY 4103L
#undef org_lwjgl_openal_ALC_REFRESH
#define org_lwjgl_openal_ALC_REFRESH 4104L
#undef org_lwjgl_openal_ALC_SYNC
#define org_lwjgl_openal_ALC_SYNC 4105L
#undef org_lwjgl_openal_ALC_INVALID_DEVICE
#define org_lwjgl_openal_ALC_INVALID_DEVICE 40961L
#undef org_lwjgl_openal_ALC_INVALID_CONTEXT
#define org_lwjgl_openal_ALC_INVALID_CONTEXT 40962L
#undef org_lwjgl_openal_ALC_INVALID_ENUM
#define org_lwjgl_openal_ALC_INVALID_ENUM 40963L
#undef org_lwjgl_openal_ALC_INVALID_VALUE
#define org_lwjgl_openal_ALC_INVALID_VALUE 40964L
#undef org_lwjgl_openal_ALC_OUT_OF_MEMORY
#define org_lwjgl_openal_ALC_OUT_OF_MEMORY 40965L
/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    nCreate
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_lwjgl_openal_ALC_nCreate
  (JNIEnv *, jobject);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    nDestroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_lwjgl_openal_ALC_nDestroy
  (JNIEnv *, jobject);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    nGetString
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_lwjgl_openal_ALC_nGetString
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    nGetIntegerv
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_org_lwjgl_openal_ALC_nGetIntegerv
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    openDevice
 * Signature: (Ljava/lang/String;)Lorg/lwjgl/openal/ALCdevice;
 */
JNIEXPORT jobject JNICALL Java_org_lwjgl_openal_ALC_openDevice
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    closeDevice
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_lwjgl_openal_ALC_closeDevice
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    createContext
 * Signature: (II)Lorg/lwjgl/openal/ALCcontext;
 */
JNIEXPORT jobject JNICALL Java_org_lwjgl_openal_ALC_createContext
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    makeContextCurrent
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_lwjgl_openal_ALC_makeContextCurrent
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    nProcessContext
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_lwjgl_openal_ALC_nProcessContext
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    getCurrentContext
 * Signature: ()Lorg/lwjgl/openal/ALCcontext;
 */
JNIEXPORT jobject JNICALL Java_org_lwjgl_openal_ALC_getCurrentContext
  (JNIEnv *, jobject);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    getContextsDevice
 * Signature: (I)Lorg/lwjgl/openal/ALCdevice;
 */
JNIEXPORT jobject JNICALL Java_org_lwjgl_openal_ALC_getContextsDevice
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    suspendContext
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_lwjgl_openal_ALC_suspendContext
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    destroyContext
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_lwjgl_openal_ALC_destroyContext
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    nGetError
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_lwjgl_openal_ALC_nGetError
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    nIsExtensionPresent
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_lwjgl_openal_ALC_nIsExtensionPresent
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     org_lwjgl_openal_ALC
 * Method:    nGetEnumValue
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_lwjgl_openal_ALC_nGetEnumValue
  (JNIEnv *, jobject, jint, jstring);

#ifdef __cplusplus
}
#endif
#endif
