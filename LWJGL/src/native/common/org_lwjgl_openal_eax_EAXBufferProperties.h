/* 
 * Copyright (c) 2002 Light Weight Java Game Library Project
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are 
 * met:
 * 
 * * Redistributions of source code must retain the above copyright 
 *   notice, this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * * Neither the name of 'Light Weight Java Game Library' nor the names of 
 *   its contributors may be used to endorse or promote products derived 
 *   from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_lwjgl_openal_eax_EAXBufferProperties */

#ifndef _Included_org_lwjgl_openal_eax_EAXBufferProperties
#define _Included_org_lwjgl_openal_eax_EAXBufferProperties
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: EAXBUFFERPROPERTIES_SIZE */
/* Inaccessible static: direct_offset */
/* Inaccessible static: directHF_offset */
/* Inaccessible static: room_offset */
/* Inaccessible static: roomHF_offset */
/* Inaccessible static: roomRolloffFactor_offset */
/* Inaccessible static: obstruction_offset */
/* Inaccessible static: obstructionLFRatio_offset */
/* Inaccessible static: occlusion_offset */
/* Inaccessible static: occlusionLFRatio_offset */
/* Inaccessible static: occlusionRoomRatio_offset */
/* Inaccessible static: outsideVolumeHF_offset */
/* Inaccessible static: airAbsorptionFactor_offset */
/* Inaccessible static: flags_offset */
/*
 * Class:     org_lwjgl_openal_eax_EAXBufferProperties
 * Method:    sizeOfEaxBufferProperties
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_lwjgl_openal_eax_EAXBufferProperties_sizeOfEaxBufferProperties
  (JNIEnv *, jobject);

/*
 * Class:     org_lwjgl_openal_eax_EAXBufferProperties
 * Method:    assignOffsets
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_lwjgl_openal_eax_EAXBufferProperties_assignOffsets
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
